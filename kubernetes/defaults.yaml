# -*- coding: utf-8 -*-
# vim: ft=yaml
---
kubernetes:
  formula: kubernetes
  supported:
    - server
    - client
    - node
    - devspace
    - kubebuilder
    - k3s
    - kudo
    - minikube
  identity:
    rootuser: root
    rootgroup: root
  arch: ''
  dir:
    binary: /usr/local
    archive: /usr/local
    tmp: /tmp/kubernetes-tmp
  pkg:
    deps:
      - curl
      - tar
      - gzip
    repo:
      humanname: kubernetes
      name: kubernetes
      comments:
        - installed by salt
      enabled: 1
      gpgcheck: 1

  client:
    version: 1.18.0
    config_file: /etc/default/kubernetes-node.ini
    config: {}
    environ_file: /etc/default/kubernetes-node.sh
    environ: []
    service: {}
    pkg:
      name: kubectl
      use_upstream_repo: false
      use_upstream_binary: false
      use_upstream_archive: true
      suffix: tar.gz
      commands:
        - kubectl
      archive:
        path: null  # set in map.jinja
        uri: 'https://dl.k8s.io'
        source_hash: '110844511b70f9f3ebb92c15105e6680a05a562cd83f79ce2d2e25c2dd70f0dbd91cae34433f61364ae1ce4bd573b635f2f632d52de8f72b54acdbc95a15e3f0'  # noqa 204
        trim_output: true
        enforce_toplevel: false
        options: '--strip-components=2'
      binary:
        name: kubernetes-client
        uri: https://storage.googleapis.com/kubernetes-release/release
        source: null   # set in map.jinja
        source_hash: 6ea8261b503c6c63d616878837dc70b758d4a3aeb9996ade8e83b51aedac9698
        trim_output: true
  server:
    version: 1.18.0
    config_file: /etc/default/kubernetes-server.ini
    config: {}
    environ_file: /etc/default/kubernetes-server.sh
    environ: []
    service: {}
    pkg:
      name: kubernetes-server
      use_upstream_repo: false
      use_upstream_archive: true
      suffix: tar.gz
      commands:
        - apiextensions-apiserver
        - kube-scheduler
        - kubeadm
        - kubectl
        - kubelet
        - mounter
        - kube-apiserver
        - kube-controller-manager
        - kube-proxy
      archive:
        path: null  # set in map.jinja
        uri: 'https://dl.k8s.io'
        source_hash: a92f8d201973d5dfa44a398e95fcf6a7b4feeb1ef879ab3fee1c54370e21f59f725f27a9c09ace8c42c96ac202e297fd458e486c489e05f127a5cade53b8d7c4  # noqa 204
        trim_output: true
        enforce_toplevel: false
        options: '--strip-components=2'
  node:
    version: 1.18.0
    config_file: /etc/default/kubernetes-node.ini
    config: {}
    environ_file: /etc/default/kubernetes-node.sh
    environ: []
    service: {}
    pkg:
      name: kubernetes-node
      use_upstream_repo: false
      use_upstream_archive: true
      suffix: tar.gz
      commands:
        - kubeadm
        - kubectl
        - kubelet
        - kube-proxy
      archive:
        path: null  # set in map.jinja
        uri: 'https://dl.k8s.io'
        source_hash: f714f80feecb0756410f27efb4cf4a1b5232be0444fbecec9f25cb85a7ccccdcb5be588cddee935294f460046c0726b90f7acc52b20eeb0c46a7200cf10e351a  # noqa 204
        trim_output: true
        enforce_toplevel: false
        options: '--strip-components=2'
  minikube:
    version: 1.9.2
    config_file: /etc/default/minikube.ini
    config: {}
    environ_file: /etc/default/minikube.sh
    environ: []
    service: {}
    check: egrep --color 'vmx|svm' /proc/cpuinfo
    vm_driver: none
    pkg:
      name: minikube
      use_upstream_repo: false
      use_upstream_binary: true
      binary:
        name: minikube
        uri: https://github.com/kubernetes/minikube/releases/download
        source: null       # see map.jinja
        source_hash: 3121f933bf8d608befb24628a045ce536658738c14618504ba46c92e656ea6b5
        trim_output: true

  devspace:
    version: 4.13.1
    config_file: /etc/default/devspace.ini
    config: {}
    environ_file: /etc/default/devspace.sh
    environ: []
    service: {}
    pkg:
      name: devspace
      use_upstream_repo: false
      use_upstream_binary: true
      binary:
        uri: https://github.com/devspace-cloud/devspace/releases/download
        name: devspace
        source: null   # set in map.jinja
        source_hash: 19faec36f190d0c3a3447f47c05378fabbe9f01e27f8b7475d51796e288bdbd4
        trim_output: true

  k3s:
    version: '1.18.4+k3s1'
    pkg:
      use_upstream_binary: false
      use_upstream_script: true
      binary:
        uri: https://github.com/rancher/k3s/releases/download
        name: k3s
        source: null   # set in map.jinja
        source_hash: 0c19d64dde77c8bb3af1dfbac5aecea59ab4679d97dcfaa62419aaa795380490
      script:
        source: https://get.k3s.io
        source_hash: b2856cee3432cf0148513b644b5369db8fa8b039793959f410aa7dfdb496b2b9
        killall: /usr/local/bin/k3s-killall.sh
        uninstall: /usr/local/bin/k3s-uninstall.sh
        env:
          INSTALL_K3S_BIN_DIR: /usr/local/bin
          # INSTALL_K3S_BIN_DIR_READ_ONLY: false
          # INSTALL_K3S_CHANNEL_URL: https://update.k3s.io/v1-release/channels
          # INSTALL_K3S_CHANNEL: stable
          # INSTALL_K3S_EXEC: ''
          # INSTALL_K3S_NAME: ''
          # INSTALL_K3S_SKIP_DOWNLOAD: false
          # INSTALL_K3S_SYMLINK: skip
          # INSTALL_K3S_SKIP_ENABLE: false
          # INSTALL_K3S_SKIP_START: false
          # INSTALL_K3S_SYSTEMD_DIR: /etc/system/systemd
          # INSTALL_K3S_TYPE: ''
          # INSTALL_K3S_VERSION: ''
          # K3S_AGENT_TOKEN: ''
          # K3S_AGENT_TOKEN_FILE: ''
          # K3S_CLUSTER_INIT: ''
          # K3S_CLUSTER_RESET: ''
          # K3S_CLUSTER_SECRET: ''
          # K3S_DATASTORE_ENDPOINT: ''
          # K3S_DATASTORE_CAFILE: ''
          # K3S_DATASTORE_CERTFILE: ''
          # K3S_DATASTORE_KEYFILE:''
          # K3S_KUBECONFIG_MODE: ''
          # K3S_NODE_NAME: ''
          # K3S_RESOLV_CONF: ''
          # K3S_TOKEN: ''
          # K3S_TOKEN_FILE: ''
          # KUBECONFIG: /etc/rancher/k3s/k3s.yaml

  kudo:
    version: 0.12.0
    pkg:
      name: kubectl-kudo
      use_upstream_binary: true
      use_upstream_package: false
      binary:
        uri: https://github.com/kudobuilder/kudo/releases/download
        name: kubectl-kudo
        source: null   # set in map.jinja
        source_hash: 5df22a42021d78a199d00f055faedd47a86ad3001bd06da31549c0a477a403a9

  kubebuilder:
    version: 2.3.1
    pkg:
      name: kubebuilder
      use_upstream_archive: true
      suffix: tar.gz
      commands:
        - etcd
        - kube-apiserver
        - kubebuilder
        - kubectl
      archive:
        path: null  # set in map.jinja
        uri: 'https://github.com/kubernetes-sigs/kubebuilder/releases/download'
        source_hash: 'ff496970f209706763f2aba2bdcefc2de8d00085b3b972b5790117b59ea4ed10'
        trim_output: true
        enforce_toplevel: false
        options: '--strip-components=1'

  linux:
    altpriority: 0

  retry_option:
    # https://docs.saltstack.com/en/latest/ref/states/requisites.html#retrying-states
    attempts: 3
    until: true
    interval: 60
    splay: 10

  # Just here for testing
  added_in_defaults: defaults_value
  winner: defaults
