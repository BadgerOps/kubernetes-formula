# -*- coding: utf-8 -*-
# vim: ft=jinja

{#- Get the `tplroot` from `tpldir` #}
{%- set tplroot = tpldir.split('/')[0] %}
{#- Start imports as #}
{%- import_yaml tplroot ~ "/defaults.yaml" as default_settings %}
{%- import_yaml tplroot ~ "/osfamilymap.yaml" as osfamilymap %}
{%- import_yaml tplroot ~ "/osarchmap.yaml" as osarchmap %}

{#- Retrieve the config dict only once #}
{%- set _config = salt['config.get'](tplroot, default={}) %}

{%- set defaults = salt['grains.filter_by'](
      default_settings,
      default=tplroot,
      merge=salt['grains.filter_by']( osfamilymap, grain='os_family',
        merge=salt['grains.filter_by']( osarchmap, grain='osarch',
          merge=salt['grains.filter_by']( _config, default='lookup'
          )
        )
      )
    )
 %}

{%- set config = salt['grains.filter_by']( {'defaults': defaults}, default='defaults', merge=_config) %}

{#- Change **kubernetes** to match with your formula's name and then remove this line #}
{%- set kubernetes = config %}

{%- for comp in ('kubectl', 'minikube') %}

    {%- if kubernetes[comp]['pkg']['use_upstream_binary'] %}
        {%- set dirname = comp + '-v%s'|format(ks8[comp]['version']) %}
        {%- set uri = '%s/v%s/bin/%s/%s'|format(kubernetes[comp]['pkg']['binary']['uri'], 
                                                kubernetes[comp]['version'], 
                                                kubernetes.kernel,
                                                kubernetes.arch) %}
        {%- do kubernetes[comp]['pkg']['binary'].update({
               'name':    kubernetes[comp]['pkg']['binary']['basedir'],
               'basedir': kubernetes[comp]['pkg']['binary']['basedir'] + '/' + dirname,
               'source':  uri + '/' + kubernetes[comp]['pkg']['name']
        }) %}
    {%- endif %}

    {%- if kubernetes[comp]['pkg']['use_upstream_source'] %}
        {%- set dirname = '%s-%s'|format(kubernetes[comp]['pkg']['source']['name'], ks8[comp]['version']) %}
        {%- set uri = kubernetes[comp]['pkg']['source']['uri'] + '/' + dirname %}
        {%- do kubectl.pkg.source.update({
               'name':    kubernetes[comp]['pkg']['source']['basedir'],
               'basedir': kubernetes[comp]['pkg']['source']['basedir'] + '/' + dirname,
               'source':  uri + '.' + kubernetes[comp]['pkg']['source']['archive_suffix'],
               'archive_format': kubernetes[comp]['pkg']['source']['archive_format']
        }) %}
    {%- endif %}

{%- endfor %}

